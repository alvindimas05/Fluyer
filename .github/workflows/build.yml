name: Build & Publish

on:
  workflow_dispatch:
    inputs:
      build-windows:
        description: "Build for Windows"
        required: false
        type: boolean
      build-macos-intel:
        description: "Build for MacOS (Intel)"
        required: false
        type: boolean
      build-macos-silicon:
        description: "Build for MacOS (Silicon)"
        required: false
        type: boolean
      build-linux:
        description: "Build for Linux"
        required: false
        type: boolean
      build-android-armv7:
        description: "Build for Android (armv7)"
        required: false
        type: boolean
      build-android-aarch64:
        description: "Build for Android (aarch64)"
        required: false
        type: boolean
      build-android-i686:
        description: "Build for Android (i686)"
        required: false
        type: boolean
      build-android-x86_64:
        description: "Build for Android (x86_64)"
        required: false
        type: boolean

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    permissions: write-all
    if: ${{ github.event.inputs.build-windows == 'true' }}
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Workflow
        shell: bash
        run: os=windows bash setup-workflow.sh

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: false
          prerelease: true

  build-macos-intel:
    name: Build MacOS (Intel)
    runs-on: macos-13
    permissions: write-all
    if: ${{ github.event.inputs.build-macos-intel == 'true' }}
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Workflow
        run: bash setup-workflow.sh
        env:
            os: macos
            macos_type: intel

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: false
          prerelease: true

  build-macos-silicon:
    name: Build MacOS (Silicon)
    runs-on: macos-latest
    permissions: write-all
    if: ${{ github.event.inputs.build-macos-silicon == 'true' }}
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Workflow
        run: bash setup-workflow.sh
        env:
            os: macos
            macos_type: silicon

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: false
          prerelease: true
      
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    permissions: write-all
    if: ${{ github.event.inputs.build-linux == 'true' }}
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Setup Workflow
        run: bash setup-workflow.sh
        env:
            os: linux

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Front-End dependencies
        run: bun i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: false
          prerelease: true

  build-android-armv7:
      name: Build Android (armv7)
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android-armv7 == 'true' }}
      steps:
          - uses: actions/checkout@v4
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
                distribution: 'zulu'
                java-version: '17'
          - uses: oven-sh/setup-bun@v2

          - name: Setup Android SDK
            uses: android-actions/setup-android@v3

          - name: Install NDK
            run: sdkmanager "ndk;27.0.11902837"

          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              target: armv7-linux-androideabi
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'
        
          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Setup Workflow
            run: bash setup-workflow.sh
            env:
                os: android
                APP_VERSION: ${{ steps.package-version.outputs.current-version }}
                ANDROID_ARCH: armv7
                ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
                ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
                RUNNER_TEMP: ${{ runner.temp }}
                NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
          
          - name: Publish release
            uses: ncipollo/release-action@v1
            with:
                artifacts: ./apks/Fluyer_${{ steps.package-version.outputs.current-version }}_armv7.apk
                tag: v${{ steps.package-version.outputs.current-version }}
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                allowUpdates: true
                prerelease: true
                artifactErrorsFailBuild: false
                token: ${{ secrets.GITHUB_TOKEN }}
  build-android-aarch64:
      name: Build Android (aarch64)
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android-aarch64 == 'true' }}
      steps:
          - uses: actions/checkout@v4
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
                distribution: 'zulu'
                java-version: '17'
          - uses: oven-sh/setup-bun@v2

          - name: Setup Android SDK
            uses: android-actions/setup-android@v3

          - name: Install NDK
            run: sdkmanager "ndk;27.0.11902837"

          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              target: aarch64-linux-android
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'
        
          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Setup Workflow
            run: bash setup-workflow.sh
            env:
                os: android
                APP_VERSION: ${{ steps.package-version.outputs.current-version }}
                ANDROID_ARCH: aarch64
                ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
                ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
                RUNNER_TEMP: ${{ runner.temp }}
                NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
          
          - name: Publish release
            uses: ncipollo/release-action@v1
            with:
                artifacts: ./apks/Fluyer_${{ steps.package-version.outputs.current-version }}_aarch64.apk
                tag: v${{ steps.package-version.outputs.current-version }}
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                allowUpdates: true
                prerelease: true
                artifactErrorsFailBuild: false
                token: ${{ secrets.GITHUB_TOKEN }}
  build-android-i686:
      name: Build Android (i686)
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android-i686 == 'true' }}
      steps:
          - uses: actions/checkout@v4
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
                distribution: 'zulu'
                java-version: '17'
          - uses: oven-sh/setup-bun@v2

          - name: Setup Android SDK
            uses: android-actions/setup-android@v3

          - name: Install NDK
            run: sdkmanager "ndk;27.0.11902837"

          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              target: i686-linux-android
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'
        
          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Setup Workflow
            run: bash setup-workflow.sh
            env:
                os: android
                APP_VERSION: ${{ steps.package-version.outputs.current-version }}
                ANDROID_ARCH: i686
                ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
                ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
                RUNNER_TEMP: ${{ runner.temp }}
                NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
          
          - name: Publish release
            uses: ncipollo/release-action@v1
            with:
                artifacts: ./apks/Fluyer_${{ steps.package-version.outputs.current-version }}_i686.apk
                tag: v${{ steps.package-version.outputs.current-version }}
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                allowUpdates: true
                prerelease: true
                artifactErrorsFailBuild: false
                token: ${{ secrets.GITHUB_TOKEN }}
  build-android-x86_64:
      name: Build Android (x86_64)
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android-x86_64 == 'true' }}
      steps:
          - uses: actions/checkout@v4
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
                distribution: 'zulu'
                java-version: '17'
          - uses: oven-sh/setup-bun@v2

          - name: Setup Android SDK
            uses: android-actions/setup-android@v3

          - name: Install NDK
            run: sdkmanager "ndk;27.0.11902837"

          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
            with:
              target: x86_64-linux-android
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'
        
          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Setup Workflow
            run: bash setup-workflow.sh
            env:
                os: android
                APP_VERSION: ${{ steps.package-version.outputs.current-version }}
                ANDROID_ARCH: x86_64
                ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
                ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
                ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
                RUNNER_TEMP: ${{ runner.temp }}
                NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
          
          - name: Publish release
            uses: ncipollo/release-action@v1
            with:
                artifacts: ./apks/Fluyer_${{ steps.package-version.outputs.current-version }}_x86_64.apk
                tag: v${{ steps.package-version.outputs.current-version }}
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                allowUpdates: true
                prerelease: true
                artifactErrorsFailBuild: false
                token: ${{ secrets.GITHUB_TOKEN }}


  build-android-x86_64:
      name: Build Android (x86_64)
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android-x86_64 == 'true' }}
      steps: 
          - uses: actions/checkout@v4
          - uses: oven-sh/setup-bun@v2
    
          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
            workspaces: './src-tauri -> target'
          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Setup Workflow
            run: bash setup-workflow.sh
            env:
                os: android
                APP_VERSION: ${{ steps.package-version.outputs.current-version }}
          
          - name: Publish release
            uses: ncipollo/release-action@v1
            with:
                artifacts: ./ipas/Fluyer_${{ steps.package-version.outputs.current-version }}.ipa
                tag: v${{ steps.package-version.outputs.current-version }}
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                allowUpdates: true
                prerelease: true
                artifactErrorsFailBuild: false
                token: ${{ secrets.GITHUB_TOKEN }}