name: Build Fluyer

on:
  workflow_dispatch:
    inputs:
      build_windows:
        description: "Build for Windows"
        required: false
        default: "false"
        type: boolean
      build_linux:
        description: "Build for Linux"
        required: false
        default: "false"
        type: boolean
      build_macos:
        description: "Build for MacOS"
        required: false
        default: "false"
        type: boolean
      build_android:
        description: "Build for Android"
        required: false
        default: "false"
        type: boolean

jobs:
  build:
    name: Build Selected OSes
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build_key: build_linux
          - os: windows-latest
            build_key: build_windows
          - os: macos-latest
            build_key: build_macos

    if: ${{ github.event.inputs[matrix.build_key] == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri App
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cargo tauri build --target x86_64-pc-windows-msvc;
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cargo tauri build --target x86_64-unknown-linux-gnu;
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            cargo tauri build --target x86_64-apple-darwin;
          fi

  android:
    name: Build Android
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.build_android == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Setup Android environment
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
          ANDROID_HOME: ${{ runner.temp }}/android-sdk
        run: |
          sudo apt-get update && sudo apt-get install -y openjdk-11-jdk unzip
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -o android-tools.zip
          unzip -q android-tools.zip -d $ANDROID_SDK_ROOT
          yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "build-tools;30.0.3" "platform-tools" "platforms;android-30"

      - name: Build Tauri for Android
        run: cargo tauri android build
