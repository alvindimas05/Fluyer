name: Build Fluyer

on:
  workflow_dispatch:
    inputs:
      build-windows:
        description: "Build for Windows"
        required: false
        type: boolean
      build-linux:
        description: "Build for Linux"
        required: false
        type: boolean
      build-android:
        description: "Build for Android"
        required: false
        type: boolean

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    permissions: write-all
    if: ${{ github.event.inputs.build-windows == 'true' }}
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Front-End dependencies
        run: bun i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: true
          prerelease: false  

      
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    permissions: write-all
    if: ${{ github.event.inputs.build-linux == 'true' }}
    steps: 
      - uses: actions/checkout@v4

      - name: Install Ubuntu Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf librust-alsa-sys-dev

      - uses: oven-sh/setup-bun@v2

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Front-End dependencies
        run: bun i

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'Fluyer v__VERSION__'
          releaseDraft: true
          prerelease: false

  build-android:
      name: Build Android
      runs-on: ubuntu-latest
      permissions:
          contents: write
      if: ${{ github.event.inputs.build-android == 'true' }}
      steps:
          - uses: actions/checkout@v4
          - name: Setup Java
            uses: actions/setup-java@v4
            with:
                distribution: 'zulu'
                java-version: '17'
          - uses: oven-sh/setup-bun@v2

          - name: Setup Android SDK
            uses: android-actions/setup-android@v3

          - name: Install NDK
            run: sdkmanager "ndk;27.0.11902837"

          - name: Install Rust stable
            uses: dtolnay/rust-toolchain@stable
          - name: Rust cache
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'

          - name: Install Front-End dependencies
            run: bun i
          
          - name: Setup Android signing
            run: |
              cd src-tauri/gen/android
              echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
              echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
              base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
              echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
              
          - name: Add Rust Target
            run: rustup target add aarch64-linux-android

          - name: Build App Bundle
            run: bun tauri android build -v
            env:
                NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

          - name: Get Node Project Version
            id: package-version
            uses: martinbeentjes/npm-get-version-action@v1.3.1

          - name: Rename APK file
            run: |
                mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/fluyer-${{ steps.package-version.outputs.current-version }}.apk

          - name: Publish
            uses: softprops/action-gh-release@v1
            with:
                draft: true
                name: Fluyer v${{ steps.package-version.outputs.current-version }}
                tag_name: v${{ steps.package-version.outputs.current-version }}
                generate_release_notes: true
                files: |
                    ./src-tauri/gen/android/app/build/outputs/apk/universal/release/fluyer-${{ steps.package-version.outputs.current-version }}.apk